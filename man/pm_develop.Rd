% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pm_develop.R
\name{pm_develop}
\alias{pm_develop}
\title{Develop a prediction model}
\usage{
pm_develop(formula, data, params)
}
\arguments{
\item{formula}{a string representing a formula object. The outcome should be on the left of a tilde (~)
and the predictors should be on the right. The outcome should adhere to the specification of the used
regression model (e.g. using Surv() for a Cox regression model).}

\item{data}{a matrix, data frame, or tibble containing the outcome variable(s) and predictors.}

\item{params}{a list of parameters for fitting the model:
\itemize{
\item \code{model}: the regression model to be fitted. Should be one of 'linear', 'logistic', 'poisson', 'aft'
(accelerated failure time), 'cox', or 'fine-gray'.
\item \code{imputation_column}: a string indicating the column containing imputation numbers. This defaults to .imp as
created by \pkg{mice}.
\item \code{horizon}: prediction horizon for survival models (aft, cox, and fine-gray).
\item \code{aft_distribution}: a string indicating the distribution with which the accelerated failure time model should be fitted.
\item \code{all_hazards}: a logical indicating whether all hazards should be extracted and returned, instead of only the
baseline hazard.
\item \code{optimism_correction}: a logical indicating whether coefficients should be optimism corrected (see Details).
\item \code{bootstraps}: the number of bootstraps to be used for optimism correction.
}}
}
\value{
A list object of class 'pm' containing the model type, model coefficients, supplied parameters, and if applicable,
the unpenalized coefficients.
}
\description{
\code{pm_develop()} develops a prediction model according to the specified regression method.
}
\details{
Optimism correction is performed using bootstrap-based uniform shrinkage (BU). Full details can be found in
Van Calster \emph{et al.} Stat Methods Med Res. 2020 (\href{https://doi.org/10.1177/0962280220921415}{DOI}).
}
\examples{
# Load survival and dplyr packages
library(survival); library(dplyr)

# Change status of data to 0 and 1
dat <- mutate(lung, status = status - 1)

# Set parameters for Cox model with outcome at 1 year
params <- list(model = "cox",
               horizon = 365.25)

# Create model formula
form <- "Surv(time, status) ~ age + sex"

# Develop model
fit <- pm_develop(formula, dat, params)

}
